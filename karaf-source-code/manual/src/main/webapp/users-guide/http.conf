h1. Http Service

The Karaf http feature enables the Pax Web implementation of the OSGi HTTPService.

h2. Installing the HTTP feature

{code}
root@karaf> feature:install http
{code}

Test the HTTP service is up by pointing your browser to [http://localhost:8080/].

h2. Configuring the HTTPService

By default the HTTPService listens on port 8181 you can change the port by creating a file {{etc/org.ops4j.pax.web.cfg}} with the following content:

{code}
org.osgi.service.http.port=8080
{code}

or by typing:
{code}
root@karaf> config:property-set -p org.ops4j.pax.web org.osgi.service.http.port 8080
{code}

If the http feature is already installed the change will take effect immediately.

h2. Registering a servlet with the HttpService manually

See [Apache Felix HTTP Service|http://felix.apache.org/site/apache-felix-http-service.html].

h2. Using the Pax Web whiteboard extender

The Pax Web whiteboard extender is an enhancement of the http feature. So use the following command to install:

{code}
root@karaf> feature:install http-whiteboard
{code}

The [Pax Web whiteboard|http://team.ops4j.org/wiki/display/ops4j/Pax+Web+Extender+-+Whiteboard] extender listens to services
of interface type HttpServlet and Filter.
It will register each of these interfaces with the HttpService and remove them as soon as the service goes down.
So it is much more convenient than registering with the HttpService directly.

{code}
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">
    <service interface="javax.servlet.http.HttpServlet">
        <service-properties>
            <entry key="alias" value="/myservlet"/>
        </service-properties>
        <bean id="myServlet" class="com.example.MyServlet"/>
    </service>
</blueprint>
{code}

The above snippet publishes the Servlet MyServlet on http://localhost:8080/myServlet.

Please keep in mind that the Whiteboard pattern for Servlets is not standardized and only works with Pax Web.

For commands take a look at the command section in the [webcontainer|webcontainer] chapter.